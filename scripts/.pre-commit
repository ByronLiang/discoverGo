#!/bin/sh

RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'
STAGED_GO_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep ".go$")

if [[ "$STAGED_GO_FILES" = "" ]]; then
    exit 0
fi

PASS=true

for FILE in $STAGED_GO_FILES
do
    # goimports 检查并调整导入语句
    goimports -w $FILE
    if [[ $? != 0 ]]; then
        PASS=false
    fi

    # golangci-lint 静态检测
    # golint 检查代码风格 (golang.org/x/lint/golint)
#    golint "-set_exit_status" $FILE
#    if [[ $? == 1 ]]; then
#        PASS=false
#    fi

    # go tool vet 检查代码中的静态错误
#    go tool vet $FILE
#    if [[ $? != 0 ]]; then
#        PASS=false
#    fi

  # gofmt 格式化
    UNFORMATTED=$(gofmt -l $FILE)
    if [[ "$UNFORMATTED" != "" ]];then
        gofmt -w $PWD/$UNFORMATTED
        if [[ $? != 0 ]]; then
            PASS=false
        fi
    fi

    # 上述 goimports, gofmt可能会对文件作出改动，
    git add $FILE

done

if ! $PASS; then
    echo -e "${RED}COMMIT FAILED${NC}"
    exit 1
else
    echo -e "${GREEN}COMMIT SUCCEEDED${NC}"
fi

exit 0